#pragma once

#include "config_common.h"

/* USB CONFIG */
#define USB_POLLING_INTERVAL_MS 1
#define FORCE_NKRO
/* Device descriptor parameters */
#define VENDOR_ID 0x4B4B   // KK
#define PRODUCT_ID 0x5941  // YA
#define DEVICE_VER 0x0003
#define MANUFACTURER KARLK90
#if defined(__riscv)
#    define PRODUCT YAEMK 1.2 RISC-V
#elif defined(__arm__)
#    define PRODUCT YAEMK 1.2 ARM
#endif
#define DESCRIPTION Split Keyboard

/* MATRIX CONFIG */
#define MATRIX_ROWS 10
#define MATRIX_COLS 8
#define DIODE_DIRECTION COL2ROW
#define DEBUG_MATRIX_SCAN_RATE
#define DEBOUNCE 8
#define TAPPING_TOGGLE 2
#define BUSY_WAIT
#define BUSY_WAIT_INSTRUCTIONS 50
#define MATRIX_COL_PINS \
    { B15, B14, B13, B2, B1, B0, A7, A2 }
#define MATRIX_ROW_PINS \
    { A8, B12, A6, A5, A1 }
#define MATRIX_COL_PINS_RIGHT \
    { A2, A7, B0, B1, B2, B13, B14, B15 }
#define MATRIX_ROW_PINS_RIGHT \
    { A8, B12, A6, A5, A1 }

/* ENCODER CONFIG */
#define ENCODER_RESOLUTION 2
#define ENCODERS_PAD_A_RIGHT \
    { A4 }
#define ENCODERS_PAD_B_RIGHT \
    { A3 }
#define ENCODERS_PAD_A \
    { A3 }
#define ENCODERS_PAD_B \
    { A4 }

/* SPLIT CONFIG */
#define SPLIT_TRANSPORT_MIRROR
#define SPLIT_HAND_PIN C13
#define SPLIT_PLUG_DETECT_PIN A9

/* RGB MATRIX CONFIG */
#define RGB_MATRIX_HUE_STEP 6
#define RGB_MATRIX_SAT_STEP 6
#define RGB_MATRIX_VAL_STEP 6
#define RGB_MATRIX_SPD_STEP 6
#define RGB_MATRIX_FRAMEBUFFER_EFFECTS
#define RGB_MATRIX_KEYPRESSES
#define RGB_MATRIX_MAXIMUM_BRIGHTNESS RGBLIGHT_LIMIT_VAL
#define RGB_MATRIX_LED_PROCESS_LIMIT DRIVER_LED_TOTAL / 10
#define RGB_MATRIX_LED_FLUSH_LIMIT 16
#define RGBLIGHT_SPLIT
#define RGB_MATRIX_SPLIT RGBLED_SPLIT

/* WS2812 DRIVER */
#define RGBLED_NUM 80
#define DRIVER_LED_TOTAL RGBLED_NUM
#define RGBLED_SPLIT \
    { 40, 40 }
#define FASTLED_SCALE8_FIXED 1
#define RGB_DI_PIN A10
#define RGBLIGHT_LIMIT_VAL 255
#define WS2812_TRST_US 80
#define WS2812_PWM_DRIVER PWMD1
#define WS2812_PWM_CHANNEL 3
#define WS2812_PWM_PAL_MODE 6
#define WS2812_DMA_CHANNEL 5
#define WS2812_EXTERNAL_PULLUP
#if defined(__riscv)
#    define WS2812_DMA_STREAM GD32_DMA0_STREAM4
#elif defined(__arm__)
#    define WS2812_DMA_STREAM STM32_DMA1_STREAM5
#endif

/* SERIAL SPLIT DRIVER */
#define SERIAL_USART_TX_PIN B10
#define SERIAL_USART_RX_PIN B11
#define SERIAL_USART_DRIVER UARTD3
#define SERIAL_USE_MULTI_TRANSACTION
#define SERIAL_USART_TIMEOUT 15

#if defined(__riscv)
#    define SERIAL_USART_SPEED (GD32_PCLK1 >> 4)  // Always use the highest possible baudrate.
#elif defined(__arm__)
#    define SERIAL_USART_SPEED (STM32_PCLK1 >> 4)  // Always use the highest possible baudrate.
#endif

/* I2C DRIVER */
#define EEPROM_I2C_CAT24C512

#if defined(__riscv)
#    define I2C1_CLOCK_SPEED 400000  // 1000000 Fast mode plus supported, but disabled by default.
#    define I2C1_DUTY_CYCLE FAST_DUTY_CYCLE_2
#endif

/* OLED DRIVER CONFIG */
#define OLED_DISPLAY_CUSTOM
#define OLED_DISPLAY_WIDTH 64
#define OLED_DISPLAY_HEIGHT 128
#define OLED_COM_PIN_OFFSET 32
#define OLED_MATRIX_SIZE (OLED_DISPLAY_HEIGHT / 8 * OLED_DISPLAY_WIDTH)
#define OLED_BLOCK_TYPE uint16_t
#define OLED_SOURCE_MAP \
    { 0, 8, 16, 24, 32, 40, 48, 56 }
#define OLED_TARGET_MAP \
    { 56, 48, 40, 32, 24, 16, 8, 0 }
#define OLED_BLOCK_COUNT (sizeof(OLED_BLOCK_TYPE) * 8)
#define OLED_BLOCK_SIZE (OLED_MATRIX_SIZE / OLED_BLOCK_COUNT)
#define OLED_COM_PINS COM_PINS_ALT
#define OLED_IC OLED_IC_SH1107
#define OLED_BRIGHTNESS 128
#define OLED_TIMEOUT 15000
#define OLED_UPDATE_INTERVAL 200

/* TAPPING CONFIG */
#define TAPPING_TERM 160
#define IGNORE_MOD_TAP_INTERRUPT
#define TAPPING_FORCE_HOLD
#define QMK_KEYS_PER_SCAN 8
#define PERMISSIVE_HOLD_PER_KEY

/* MOUSEKEY CONFIG */
#undef MOUSEKEY_DELAY
#define MOUSEKEY_DELAY 0
#undef MOUSEKEY_INTERVAL
#define MOUSEKEY_INTERVAL 16
#undef MOUSEKEY_WHEEL_DELAY
#define MOUSEKEY_WHEEL_DELAY 0
#undef MOUSEKEY_MAX_SPEED
#define MOUSEKEY_MAX_SPEED 6
#undef MOUSEKEY_TIME_TO_MAX
#define MOUSEKEY_TIME_TO_MAX 64

/* JOYSTICK CONFIG */
#define JOYSTICK_AXES_COUNT 0
#define JOYSTICK_BUTTON_COUNT 0
